version: "3.5"

volumes:
  conf:
  vhost:
  html:
  dhparam:
  certs:

services:
  api:
    command: ["yarn", "start"]
    restart: always
    environment:
      - NODE_ENV=production
      - VIRTUAL_HOST=${API_HOST_ADDRESS}
      - LETSENCRYPT_HOST=${API_HOST_ADDRESS}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}

    depends_on:
      - nginx-proxy
      - nginx-proxy-letsencrypt

  front:
    environment:
      - NODE_ENV=production
    depends_on:
      - nginx-proxy
      - nginx-proxy-letsencrypt

  admin:
    environment:
      - NODE_ENV=production
    depends_on:
      - nginx-proxy
      - nginx-proxy-letsencrypt

  mongo:
    restart: always

  nginx:
    restart: always
    depends_on:
      - nginx-proxy
      - nginx-proxy-letsencrypt
    environment:
      - VIRTUAL_HOST=${PUBLIC_HOST_ADDRESS},${ADMIN_HOST_ADDRESS}
      - LETSENCRYPT_HOST=${PUBLIC_HOST_ADDRESS},${ADMIN_HOST_ADDRESS}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - 80:80
      - 443:443
    restart: always
    container_name: nginx-proxy
    volumes:
      - conf:/etc/nginx/conf.d
      - ./nginx-proxy/vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      NGINX_PROXY_CONTAINER: "nginx-proxy"
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - conf:/etc/nginx/conf.d
      - ./nginx-proxy/vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam

  redis:
    restart: always
